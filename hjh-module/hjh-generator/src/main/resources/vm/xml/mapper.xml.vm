<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">

    <resultMap type="${packageName}.domain.${ClassName}" id="${ClassName}Result">
#foreach ($column in $columns)
        <result property="${column.javaField}"    column="${column.columnName}"    />
#end
    </resultMap>
#if($table.sub)

    <resultMap id="${ClassName}${subClassName}Result" type="${ClassName}" extends="${ClassName}Result">
        <collection property="${subclassName}List" notNullColumn="sub_${subTable.pkColumn.columnName}" javaType="java.util.List" resultMap="${subClassName}Result" />
    </resultMap>

    <resultMap type="${subClassName}" id="${subClassName}Result">
#foreach ($column in $subTable.columns)
        <result property="${column.javaField}"    column="sub_${column.columnName}"    />
#end
    </resultMap>
#end

    <sql id="select${ClassName}Vo">
        select#foreach($column in $columns) $column.columnName#if($velocityCount != $columns.size()),#end#end from ${tableName}
    </sql>

    <select id="select${ClassName}By${pkColumn.capJavaField}" parameterType="${pkColumn.javaType}" resultMap="#if($table.sub)${ClassName}${subClassName}Result#else${ClassName}Result#end">
        #if($table.crud || $table.tree)
            <include refid="select${ClassName}Vo"/>
            where ${pkColumn.columnName} = #{${pkColumn.javaField}}
        #elseif($table.sub)
            select#foreach($column in $columns) a.$column.columnName#if($velocityCount != $columns.size()),#end#end,
            #foreach($column in $subTable.columns) b.$column.columnName as sub_$column.columnName#if($velocityCount != $subTable.columns.size()),#end#end

            from ${tableName} a
            left join ${subTableName} b on b.${subTableFkName} = a.${pkColumn.columnName}
            where a.${pkColumn.columnName} = #{${pkColumn.javaField}}
        #end
    </select>

    <select id="select${ClassName}List" parameterType="${packageName}.domain.${ClassName}" resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>
        <where>
#foreach($column in $columns)
#set($queryType=$column.queryType)
#set($javaField=$column.javaField)
#set($javaType=$column.javaType)
#set($columnName=$column.columnName)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#if($column.query)
#if($column.queryType == "EQ")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName = #{$className.$javaField}</if>
#elseif($queryType == "NE")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName != #{$className.$javaField}</if>
#elseif($queryType == "GT")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName &gt; #{$className.$javaField}</if>
#elseif($queryType == "GTE")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName &gt;= #{$className.$javaField}</if>
#elseif($queryType == "LT")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName &lt; #{$className.$javaField}</if>
#elseif($queryType == "LTE")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName &lt;= #{$className.$javaField}</if>
#elseif($queryType == "LIKE")
            <if test="$className.$javaField != null #if($javaType == 'String' ) and $className.$javaField.trim() != ''#end"> and $columnName like concat('%', #{$className.$javaField}, '%')</if>
#elseif($queryType == "BETWEEN")
            <if test="params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != ''"> and $columnName between #{params.begin$AttrName} and #{params.end$AttrName}</if>
#end
#end
#end
        </where>
    </select>

</mapper>
